// Mocks generated by Mockito 5.4.5 from annotations
// in soen_390/test/widgets/screens/calendar/calendar_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:google_sign_in/google_sign_in.dart' as _i4;
import 'package:google_sign_in_platform_interface/google_sign_in_platform_interface.dart'
    as _i5;
import 'package:googleapis_auth/googleapis_auth.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:soen_390/core/secure_storage.dart' as _i8;
import 'package:soen_390/services/auth_service.dart' as _i9;
import 'package:soen_390/services/http_service.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAuthClient_1 extends _i1.SmartFake implements _i3.AuthClient {
  _FakeAuthClient_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i4.GoogleSignIn {
  MockGoogleSignIn() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.SignInOption get signInOption => (super.noSuchMethod(
        Invocation.getter(#signInOption),
        returnValue: _i5.SignInOption.standard,
      ) as _i5.SignInOption);

  @override
  List<String> get scopes =>
      (super.noSuchMethod(Invocation.getter(#scopes), returnValue: <String>[])
          as List<String>);

  @override
  bool get forceCodeForRefreshToken => (super.noSuchMethod(
        Invocation.getter(#forceCodeForRefreshToken),
        returnValue: false,
      ) as bool);

  @override
  _i6.Stream<_i4.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onCurrentUserChanged),
        returnValue: _i6.Stream<_i4.GoogleSignInAccount?>.empty(),
      ) as _i6.Stream<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<_i4.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#signInSilently, [], {
          #suppressErrors: suppressErrors,
          #reAuthenticate: reAuthenticate,
        }),
        returnValue: _i6.Future<_i4.GoogleSignInAccount?>.value(),
      ) as _i6.Future<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(#isSignedIn, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i4.GoogleSignInAccount?> signIn() => (super.noSuchMethod(
        Invocation.method(#signIn, []),
        returnValue: _i6.Future<_i4.GoogleSignInAccount?>.value(),
      ) as _i6.Future<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<_i4.GoogleSignInAccount?> signOut() => (super.noSuchMethod(
        Invocation.method(#signOut, []),
        returnValue: _i6.Future<_i4.GoogleSignInAccount?>.value(),
      ) as _i6.Future<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<_i4.GoogleSignInAccount?> disconnect() => (super.noSuchMethod(
        Invocation.method(#disconnect, []),
        returnValue: _i6.Future<_i4.GoogleSignInAccount?>.value(),
      ) as _i6.Future<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<bool> requestScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(#requestScopes, [scopes]),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> canAccessScopes(
    List<String>? scopes, {
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #canAccessScopes,
          [scopes],
          {#accessToken: accessToken},
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [HttpService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpService extends _i1.Mock implements _i7.HttpService {
  MockHttpService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(this, Invocation.getter(#client)),
      ) as _i2.Client);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorage extends _i1.Mock implements _i8.SecureStorage {
  MockSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> storeToken(String? key, String? value) =>
      (super.noSuchMethod(
        Invocation.method(#storeToken, [key, value]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getToken(String? key) => (super.noSuchMethod(
        Invocation.method(#getToken, [key]),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> deleteToken(String? key) => (super.noSuchMethod(
        Invocation.method(#deleteToken, [key]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [AuthClientFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthClientFactory extends _i1.Mock implements _i9.AuthClientFactory {
  MockAuthClientFactory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AuthClient createAuthClient(
    _i7.HttpService? baseClient,
    _i3.AccessCredentials? credentials,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#createAuthClient, [baseClient, credentials]),
        returnValue: _FakeAuthClient_1(
          this,
          Invocation.method(#createAuthClient, [baseClient, credentials]),
        ),
      ) as _i3.AuthClient);
}
