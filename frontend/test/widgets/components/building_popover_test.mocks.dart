// Mocks generated by Mockito 5.4.5 from annotations
// in soen_390/test/widgets/components/building_popover_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;

import 'package:geolocator/geolocator.dart' as _i7;
import 'package:latlong2/latlong.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:soen_390/models/route_query_options.dart' as _i13;
import 'package:soen_390/models/route_result.dart' as _i12;
import 'package:soen_390/services/geocoding_service.dart' as _i14;
import 'package:soen_390/services/google_route_service.dart' as _i9;
import 'package:soen_390/services/interfaces/http_client_interface.dart' as _i5;
import 'package:soen_390/utils/google_api_helper.dart' as _i6;
import 'package:soen_390/utils/google_directions_url_builder.dart' as _i3;
import 'package:soen_390/utils/location_service.dart' as _i2;
import 'package:soen_390/utils/route_result_parser.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocationService_0 extends _i1.SmartFake
    implements _i2.LocationService {
  _FakeLocationService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoogleDirectionsUrlBuilder_1 extends _i1.SmartFake
    implements _i3.GoogleDirectionsUrlBuilder {
  _FakeGoogleDirectionsUrlBuilder_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRouteResultParser_2 extends _i1.SmartFake
    implements _i4.RouteResultParser {
  _FakeRouteResultParser_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIHttpClient_3 extends _i1.SmartFake implements _i5.IHttpClient {
  _FakeIHttpClient_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoogleApiHelper_4 extends _i1.SmartFake
    implements _i6.GoogleApiHelper {
  _FakeGoogleApiHelper_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGeolocatorPlatform_5 extends _i1.SmartFake
    implements _i7.GeolocatorPlatform {
  _FakeGeolocatorPlatform_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePosition_6 extends _i1.SmartFake implements _i7.Position {
  _FakePosition_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocationSettings_7 extends _i1.SmartFake
    implements _i7.LocationSettings {
  _FakeLocationSettings_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLatLng_8 extends _i1.SmartFake implements _i8.LatLng {
  _FakeLatLng_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GoogleRouteService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleRouteService extends _i1.Mock
    implements _i9.GoogleRouteService {
  MockGoogleRouteService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LocationService get locationService =>
      (super.noSuchMethod(
            Invocation.getter(#locationService),
            returnValue: _FakeLocationService_0(
              this,
              Invocation.getter(#locationService),
            ),
          )
          as _i2.LocationService);

  @override
  _i3.GoogleDirectionsUrlBuilder get urlBuilder =>
      (super.noSuchMethod(
            Invocation.getter(#urlBuilder),
            returnValue: _FakeGoogleDirectionsUrlBuilder_1(
              this,
              Invocation.getter(#urlBuilder),
            ),
          )
          as _i3.GoogleDirectionsUrlBuilder);

  @override
  _i4.RouteResultParser get parser =>
      (super.noSuchMethod(
            Invocation.getter(#parser),
            returnValue: _FakeRouteResultParser_2(
              this,
              Invocation.getter(#parser),
            ),
          )
          as _i4.RouteResultParser);

  @override
  String get apiKey =>
      (super.noSuchMethod(
            Invocation.getter(#apiKey),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#apiKey),
            ),
          )
          as String);

  @override
  _i5.IHttpClient get httpClient =>
      (super.noSuchMethod(
            Invocation.getter(#httpClient),
            returnValue: _FakeIHttpClient_3(
              this,
              Invocation.getter(#httpClient),
            ),
          )
          as _i5.IHttpClient);

  @override
  _i6.GoogleApiHelper get apiHelper =>
      (super.noSuchMethod(
            Invocation.getter(#apiHelper),
            returnValue: _FakeGoogleApiHelper_4(
              this,
              Invocation.getter(#apiHelper),
            ),
          )
          as _i6.GoogleApiHelper);

  @override
  _i11.Future<_i12.RouteResult?> getRoute({
    required _i8.LatLng? from,
    required _i8.LatLng? to,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getRoute, [], {#from: from, #to: to}),
            returnValue: _i11.Future<_i12.RouteResult?>.value(),
          )
          as _i11.Future<_i12.RouteResult?>);

  @override
  _i11.Future<Map<String, List<_i12.RouteResult>>> getRoutes({
    required _i8.LatLng? from,
    required _i8.LatLng? to,
    DateTime? departureTime,
    DateTime? arrivalTime,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getRoutes, [], {
              #from: from,
              #to: to,
              #departureTime: departureTime,
              #arrivalTime: arrivalTime,
            }),
            returnValue: _i11.Future<Map<String, List<_i12.RouteResult>>>.value(
              <String, List<_i12.RouteResult>>{},
            ),
          )
          as _i11.Future<Map<String, List<_i12.RouteResult>>>);

  @override
  _i12.RouteResult? selectRoute(List<_i12.RouteResult>? routes, int? index) =>
      (super.noSuchMethod(Invocation.method(#selectRoute, [routes, index]))
          as _i12.RouteResult?);

  @override
  _i11.Future<List<_i12.RouteResult>?> getRoutesFromOptions(
    _i13.RouteQueryOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRoutesFromOptions, [options]),
            returnValue: _i11.Future<List<_i12.RouteResult>?>.value(),
          )
          as _i11.Future<List<_i12.RouteResult>?>);
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i2.LocationService {
  MockLocationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.GeolocatorPlatform get geolocator =>
      (super.noSuchMethod(
            Invocation.getter(#geolocator),
            returnValue: _FakeGeolocatorPlatform_5(
              this,
              Invocation.getter(#geolocator),
            ),
          )
          as _i7.GeolocatorPlatform);

  @override
  _i7.Position get currentPosition =>
      (super.noSuchMethod(
            Invocation.getter(#currentPosition),
            returnValue: _FakePosition_6(
              this,
              Invocation.getter(#currentPosition),
            ),
          )
          as _i7.Position);

  @override
  set currentPosition(_i7.Position? _currentPosition) => super.noSuchMethod(
    Invocation.setter(#currentPosition, _currentPosition),
    returnValueForMissingStub: null,
  );

  @override
  _i7.LocationSettings get locSetting =>
      (super.noSuchMethod(
            Invocation.getter(#locSetting),
            returnValue: _FakeLocationSettings_7(
              this,
              Invocation.getter(#locSetting),
            ),
          )
          as _i7.LocationSettings);

  @override
  set locSetting(_i7.LocationSettings? _locSetting) => super.noSuchMethod(
    Invocation.setter(#locSetting, _locSetting),
    returnValueForMissingStub: null,
  );

  @override
  bool get serviceEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#serviceEnabled),
            returnValue: false,
          )
          as bool);

  @override
  set serviceEnabled(bool? _serviceEnabled) => super.noSuchMethod(
    Invocation.setter(#serviceEnabled, _serviceEnabled),
    returnValueForMissingStub: null,
  );

  @override
  _i7.LocationPermission get permission =>
      (super.noSuchMethod(
            Invocation.getter(#permission),
            returnValue: _i7.LocationPermission.denied,
          )
          as _i7.LocationPermission);

  @override
  set permission(_i7.LocationPermission? _permission) => super.noSuchMethod(
    Invocation.setter(#permission, _permission),
    returnValueForMissingStub: null,
  );

  @override
  _i11.Future<bool> isLocationEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#isLocationEnabled, []),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);

  @override
  _i11.Future<bool> determinePermissions() =>
      (super.noSuchMethod(
            Invocation.method(#determinePermissions, []),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);

  @override
  _i11.Future<_i7.Position> getCurrentLocation() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentLocation, []),
            returnValue: _i11.Future<_i7.Position>.value(
              _FakePosition_6(this, Invocation.method(#getCurrentLocation, [])),
            ),
          )
          as _i11.Future<_i7.Position>);

  @override
  _i11.Future<void> updateCurrentLocation() =>
      (super.noSuchMethod(
            Invocation.method(#updateCurrentLocation, []),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<_i7.Position> getCurrentLocationAccurately() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentLocationAccurately, []),
            returnValue: _i11.Future<_i7.Position>.value(
              _FakePosition_6(
                this,
                Invocation.method(#getCurrentLocationAccurately, []),
              ),
            ),
          )
          as _i11.Future<_i7.Position>);

  @override
  _i11.Future<void> updateCurrentLocationAccurately() =>
      (super.noSuchMethod(
            Invocation.method(#updateCurrentLocationAccurately, []),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  void takePosition(_i7.Position? p) => super.noSuchMethod(
    Invocation.method(#takePosition, [p]),
    returnValueForMissingStub: null,
  );

  @override
  void setPlatformSpecificLocationSettings() => super.noSuchMethod(
    Invocation.method(#setPlatformSpecificLocationSettings, []),
    returnValueForMissingStub: null,
  );

  @override
  void createLocationStream() => super.noSuchMethod(
    Invocation.method(#createLocationStream, []),
    returnValueForMissingStub: null,
  );

  @override
  _i11.Future<void> startUp() =>
      (super.noSuchMethod(
            Invocation.method(#startUp, []),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  void stopListening() => super.noSuchMethod(
    Invocation.method(#stopListening, []),
    returnValueForMissingStub: null,
  );

  @override
  bool checkIfPositionIsAtSGW(_i8.LatLng? coordinates) =>
      (super.noSuchMethod(
            Invocation.method(#checkIfPositionIsAtSGW, [coordinates]),
            returnValue: false,
          )
          as bool);

  @override
  bool checkIfPositionIsAtLOY(_i8.LatLng? coordinates) =>
      (super.noSuchMethod(
            Invocation.method(#checkIfPositionIsAtLOY, [coordinates]),
            returnValue: false,
          )
          as bool);

  @override
  _i11.Stream<_i7.Position> getPositionStream() =>
      (super.noSuchMethod(
            Invocation.method(#getPositionStream, []),
            returnValue: _i11.Stream<_i7.Position>.empty(),
          )
          as _i11.Stream<_i7.Position>);

  @override
  _i8.LatLng convertPositionToLatLng(_i7.Position? p) =>
      (super.noSuchMethod(
            Invocation.method(#convertPositionToLatLng, [p]),
            returnValue: _FakeLatLng_8(
              this,
              Invocation.method(#convertPositionToLatLng, [p]),
            ),
          )
          as _i8.LatLng);

  @override
  _i11.Stream<_i8.LatLng> getLatLngStream() =>
      (super.noSuchMethod(
            Invocation.method(#getLatLngStream, []),
            returnValue: _i11.Stream<_i8.LatLng>.empty(),
          )
          as _i11.Stream<_i8.LatLng>);
}

/// A class which mocks [GeocodingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeocodingService extends _i1.Mock implements _i14.GeocodingService {
  MockGeocodingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiKey =>
      (super.noSuchMethod(
            Invocation.getter(#apiKey),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#apiKey),
            ),
          )
          as String);

  @override
  _i5.IHttpClient get httpClient =>
      (super.noSuchMethod(
            Invocation.getter(#httpClient),
            returnValue: _FakeIHttpClient_3(
              this,
              Invocation.getter(#httpClient),
            ),
          )
          as _i5.IHttpClient);

  @override
  _i6.GoogleApiHelper get apiHelper =>
      (super.noSuchMethod(
            Invocation.getter(#apiHelper),
            returnValue: _FakeGoogleApiHelper_4(
              this,
              Invocation.getter(#apiHelper),
            ),
          )
          as _i6.GoogleApiHelper);

  @override
  _i11.Future<_i8.LatLng?> getCoordinates(String? address) =>
      (super.noSuchMethod(
            Invocation.method(#getCoordinates, [address]),
            returnValue: _i11.Future<_i8.LatLng?>.value(),
          )
          as _i11.Future<_i8.LatLng?>);
}
