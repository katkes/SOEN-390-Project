// Mocks generated by Mockito 5.4.5 from annotations
// in soen_390/test/services/calendar_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i7;
import 'dart:typed_data' as _i9;

import 'package:googleapis/calendar/v3.dart' as _i4;
import 'package:googleapis_auth/googleapis_auth.dart' as _i2;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:soen_390/repositories/auth_repository.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAccessCredentials_0 extends _i1.SmartFake
    implements _i2.AccessCredentials {
  _FakeAccessCredentials_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_1 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeStreamedResponse_2 extends _i1.SmartFake
    implements _i3.StreamedResponse {
  _FakeStreamedResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAclResource_3 extends _i1.SmartFake implements _i4.AclResource {
  _FakeAclResource_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCalendarListResource_4 extends _i1.SmartFake
    implements _i4.CalendarListResource {
  _FakeCalendarListResource_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCalendarsResource_5 extends _i1.SmartFake
    implements _i4.CalendarsResource {
  _FakeCalendarsResource_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeChannelsResource_6 extends _i1.SmartFake
    implements _i4.ChannelsResource {
  _FakeChannelsResource_6(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeColorsResource_7 extends _i1.SmartFake
    implements _i4.ColorsResource {
  _FakeColorsResource_7(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEventsResource_8 extends _i1.SmartFake
    implements _i4.EventsResource {
  _FakeEventsResource_8(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeFreebusyResource_9 extends _i1.SmartFake
    implements _i4.FreebusyResource {
  _FakeFreebusyResource_9(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeSettingsResource_10 extends _i1.SmartFake
    implements _i4.SettingsResource {
  _FakeSettingsResource_10(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEvent_11 extends _i1.SmartFake implements _i4.Event {
  _FakeEvent_11(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEvents_12 extends _i1.SmartFake implements _i4.Events {
  _FakeEvents_12(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeChannel_13 extends _i1.SmartFake implements _i4.Channel {
  _FakeChannel_13(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCalendarListEntry_14 extends _i1.SmartFake
    implements _i4.CalendarListEntry {
  _FakeCalendarListEntry_14(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCalendarList_15 extends _i1.SmartFake implements _i4.CalendarList {
  _FakeCalendarList_15(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i5.AuthRepository {
  @override
  _i6.Future<_i2.AuthClient?> getAuthClient() => (super.noSuchMethod(
        Invocation.method(#getAuthClient, []),
        returnValue: _i6.Future<_i2.AuthClient?>.value(),
        returnValueForMissingStub: _i6.Future<_i2.AuthClient?>.value(),
      ) as _i6.Future<_i2.AuthClient?>);

  @override
  _i6.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(#signOut, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [AuthClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthClient extends _i1.Mock implements _i2.AuthClient {
  @override
  _i2.AccessCredentials get credentials => (super.noSuchMethod(
        Invocation.getter(#credentials),
        returnValue: _FakeAccessCredentials_0(
          this,
          Invocation.getter(#credentials),
        ),
        returnValueForMissingStub: _FakeAccessCredentials_0(
          this,
          Invocation.getter(#credentials),
        ),
      ) as _i2.AccessCredentials);

  @override
  _i6.Future<_i3.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
        Invocation.method(#head, [url], {#headers: headers}),
        returnValue: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(#head, [url], {#headers: headers}),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(#head, [url], {#headers: headers}),
          ),
        ),
      ) as _i6.Future<_i3.Response>);

  @override
  _i6.Future<_i3.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
        Invocation.method(#get, [url], {#headers: headers}),
        returnValue: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(#get, [url], {#headers: headers}),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(#get, [url], {#headers: headers}),
          ),
        ),
      ) as _i6.Future<_i3.Response>);

  @override
  _i6.Future<_i3.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {#headers: headers, #body: body, #encoding: encoding},
        ),
        returnValue: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
      ) as _i6.Future<_i3.Response>);

  @override
  _i6.Future<_i3.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {#headers: headers, #body: body, #encoding: encoding},
        ),
        returnValue: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
      ) as _i6.Future<_i3.Response>);

  @override
  _i6.Future<_i3.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {#headers: headers, #body: body, #encoding: encoding},
        ),
        returnValue: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
      ) as _i6.Future<_i3.Response>);

  @override
  _i6.Future<_i3.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#headers: headers, #body: body, #encoding: encoding},
        ),
        returnValue: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i3.Response>.value(
          _FakeResponse_1(
            this,
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
      ) as _i6.Future<_i3.Response>);

  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
        Invocation.method(#read, [url], {#headers: headers}),
        returnValue: _i6.Future<String>.value(
          _i8.dummyValue<String>(
            this,
            Invocation.method(#read, [url], {#headers: headers}),
          ),
        ),
        returnValueForMissingStub: _i6.Future<String>.value(
          _i8.dummyValue<String>(
            this,
            Invocation.method(#read, [url], {#headers: headers}),
          ),
        ),
      ) as _i6.Future<String>);

  @override
  _i6.Future<_i9.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#readBytes, [url], {#headers: headers}),
        returnValue: _i6.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
        returnValueForMissingStub: _i6.Future<_i9.Uint8List>.value(
          _i9.Uint8List(0),
        ),
      ) as _i6.Future<_i9.Uint8List>);

  @override
  _i6.Future<_i3.StreamedResponse> send(_i3.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(#send, [request]),
        returnValue: _i6.Future<_i3.StreamedResponse>.value(
          _FakeStreamedResponse_2(
            this,
            Invocation.method(#send, [request]),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i3.StreamedResponse>.value(
          _FakeStreamedResponse_2(
            this,
            Invocation.method(#send, [request]),
          ),
        ),
      ) as _i6.Future<_i3.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(#close, []),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CalendarApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarApi extends _i1.Mock implements _i4.CalendarApi {
  @override
  _i4.AclResource get acl => (super.noSuchMethod(
        Invocation.getter(#acl),
        returnValue: _FakeAclResource_3(this, Invocation.getter(#acl)),
        returnValueForMissingStub: _FakeAclResource_3(
          this,
          Invocation.getter(#acl),
        ),
      ) as _i4.AclResource);

  @override
  _i4.CalendarListResource get calendarList => (super.noSuchMethod(
        Invocation.getter(#calendarList),
        returnValue: _FakeCalendarListResource_4(
          this,
          Invocation.getter(#calendarList),
        ),
        returnValueForMissingStub: _FakeCalendarListResource_4(
          this,
          Invocation.getter(#calendarList),
        ),
      ) as _i4.CalendarListResource);

  @override
  _i4.CalendarsResource get calendars => (super.noSuchMethod(
        Invocation.getter(#calendars),
        returnValue: _FakeCalendarsResource_5(
          this,
          Invocation.getter(#calendars),
        ),
        returnValueForMissingStub: _FakeCalendarsResource_5(
          this,
          Invocation.getter(#calendars),
        ),
      ) as _i4.CalendarsResource);

  @override
  _i4.ChannelsResource get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: _FakeChannelsResource_6(
          this,
          Invocation.getter(#channels),
        ),
        returnValueForMissingStub: _FakeChannelsResource_6(
          this,
          Invocation.getter(#channels),
        ),
      ) as _i4.ChannelsResource);

  @override
  _i4.ColorsResource get colors => (super.noSuchMethod(
        Invocation.getter(#colors),
        returnValue: _FakeColorsResource_7(
          this,
          Invocation.getter(#colors),
        ),
        returnValueForMissingStub: _FakeColorsResource_7(
          this,
          Invocation.getter(#colors),
        ),
      ) as _i4.ColorsResource);

  @override
  _i4.EventsResource get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: _FakeEventsResource_8(
          this,
          Invocation.getter(#events),
        ),
        returnValueForMissingStub: _FakeEventsResource_8(
          this,
          Invocation.getter(#events),
        ),
      ) as _i4.EventsResource);

  @override
  _i4.FreebusyResource get freebusy => (super.noSuchMethod(
        Invocation.getter(#freebusy),
        returnValue: _FakeFreebusyResource_9(
          this,
          Invocation.getter(#freebusy),
        ),
        returnValueForMissingStub: _FakeFreebusyResource_9(
          this,
          Invocation.getter(#freebusy),
        ),
      ) as _i4.FreebusyResource);

  @override
  _i4.SettingsResource get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeSettingsResource_10(
          this,
          Invocation.getter(#settings),
        ),
        returnValueForMissingStub: _FakeSettingsResource_10(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i4.SettingsResource);
}

/// A class which mocks [EventsResource].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsResource extends _i1.Mock implements _i4.EventsResource {
  @override
  _i6.Future<void> delete(
    String? calendarId,
    String? eventId, {
    bool? sendNotifications,
    String? sendUpdates,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [calendarId, eventId],
          {
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i4.Event> get(
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? maxAttendees,
    String? timeZone,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [calendarId, eventId],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #maxAttendees: maxAttendees,
            #timeZone: timeZone,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #get,
              [calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #maxAttendees: maxAttendees,
                #timeZone: timeZone,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #get,
              [calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #maxAttendees: maxAttendees,
                #timeZone: timeZone,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Event>);

  @override
  _i6.Future<_i4.Event> import(
    _i4.Event? request,
    String? calendarId, {
    int? conferenceDataVersion,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #import,
          [request, calendarId],
          {
            #conferenceDataVersion: conferenceDataVersion,
            #supportsAttachments: supportsAttachments,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #import,
              [request, calendarId],
              {
                #conferenceDataVersion: conferenceDataVersion,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #import,
              [request, calendarId],
              {
                #conferenceDataVersion: conferenceDataVersion,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Event>);

  @override
  _i6.Future<_i4.Event> insert(
    _i4.Event? request,
    String? calendarId, {
    int? conferenceDataVersion,
    int? maxAttendees,
    bool? sendNotifications,
    String? sendUpdates,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [request, calendarId],
          {
            #conferenceDataVersion: conferenceDataVersion,
            #maxAttendees: maxAttendees,
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #supportsAttachments: supportsAttachments,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #insert,
              [request, calendarId],
              {
                #conferenceDataVersion: conferenceDataVersion,
                #maxAttendees: maxAttendees,
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #insert,
              [request, calendarId],
              {
                #conferenceDataVersion: conferenceDataVersion,
                #maxAttendees: maxAttendees,
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Event>);

  @override
  _i6.Future<_i4.Events> instances(
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? maxAttendees,
    int? maxResults,
    String? originalStart,
    String? pageToken,
    bool? showDeleted,
    DateTime? timeMax,
    DateTime? timeMin,
    String? timeZone,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #instances,
          [calendarId, eventId],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #maxAttendees: maxAttendees,
            #maxResults: maxResults,
            #originalStart: originalStart,
            #pageToken: pageToken,
            #showDeleted: showDeleted,
            #timeMax: timeMax,
            #timeMin: timeMin,
            #timeZone: timeZone,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Events>.value(
          _FakeEvents_12(
            this,
            Invocation.method(
              #instances,
              [calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #maxAttendees: maxAttendees,
                #maxResults: maxResults,
                #originalStart: originalStart,
                #pageToken: pageToken,
                #showDeleted: showDeleted,
                #timeMax: timeMax,
                #timeMin: timeMin,
                #timeZone: timeZone,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Events>.value(
          _FakeEvents_12(
            this,
            Invocation.method(
              #instances,
              [calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #maxAttendees: maxAttendees,
                #maxResults: maxResults,
                #originalStart: originalStart,
                #pageToken: pageToken,
                #showDeleted: showDeleted,
                #timeMax: timeMax,
                #timeMin: timeMin,
                #timeZone: timeZone,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Events>);

  @override
  _i6.Future<_i4.Events> list(
    String? calendarId, {
    bool? alwaysIncludeEmail,
    List<String>? eventTypes,
    String? iCalUID,
    int? maxAttendees,
    int? maxResults,
    String? orderBy,
    String? pageToken,
    List<String>? privateExtendedProperty,
    String? q,
    List<String>? sharedExtendedProperty,
    bool? showDeleted,
    bool? showHiddenInvitations,
    bool? singleEvents,
    String? syncToken,
    DateTime? timeMax,
    DateTime? timeMin,
    String? timeZone,
    DateTime? updatedMin,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [calendarId],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #eventTypes: eventTypes,
            #iCalUID: iCalUID,
            #maxAttendees: maxAttendees,
            #maxResults: maxResults,
            #orderBy: orderBy,
            #pageToken: pageToken,
            #privateExtendedProperty: privateExtendedProperty,
            #q: q,
            #sharedExtendedProperty: sharedExtendedProperty,
            #showDeleted: showDeleted,
            #showHiddenInvitations: showHiddenInvitations,
            #singleEvents: singleEvents,
            #syncToken: syncToken,
            #timeMax: timeMax,
            #timeMin: timeMin,
            #timeZone: timeZone,
            #updatedMin: updatedMin,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Events>.value(
          _FakeEvents_12(
            this,
            Invocation.method(
              #list,
              [calendarId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #eventTypes: eventTypes,
                #iCalUID: iCalUID,
                #maxAttendees: maxAttendees,
                #maxResults: maxResults,
                #orderBy: orderBy,
                #pageToken: pageToken,
                #privateExtendedProperty: privateExtendedProperty,
                #q: q,
                #sharedExtendedProperty: sharedExtendedProperty,
                #showDeleted: showDeleted,
                #showHiddenInvitations: showHiddenInvitations,
                #singleEvents: singleEvents,
                #syncToken: syncToken,
                #timeMax: timeMax,
                #timeMin: timeMin,
                #timeZone: timeZone,
                #updatedMin: updatedMin,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Events>.value(
          _FakeEvents_12(
            this,
            Invocation.method(
              #list,
              [calendarId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #eventTypes: eventTypes,
                #iCalUID: iCalUID,
                #maxAttendees: maxAttendees,
                #maxResults: maxResults,
                #orderBy: orderBy,
                #pageToken: pageToken,
                #privateExtendedProperty: privateExtendedProperty,
                #q: q,
                #sharedExtendedProperty: sharedExtendedProperty,
                #showDeleted: showDeleted,
                #showHiddenInvitations: showHiddenInvitations,
                #singleEvents: singleEvents,
                #syncToken: syncToken,
                #timeMax: timeMax,
                #timeMin: timeMin,
                #timeZone: timeZone,
                #updatedMin: updatedMin,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Events>);

  @override
  _i6.Future<_i4.Event> move(
    String? calendarId,
    String? eventId,
    String? destination, {
    bool? sendNotifications,
    String? sendUpdates,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #move,
          [calendarId, eventId, destination],
          {
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #move,
              [calendarId, eventId, destination],
              {
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #move,
              [calendarId, eventId, destination],
              {
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Event>);

  @override
  _i6.Future<_i4.Event> patch(
    _i4.Event? request,
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? conferenceDataVersion,
    int? maxAttendees,
    bool? sendNotifications,
    String? sendUpdates,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [request, calendarId, eventId],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #conferenceDataVersion: conferenceDataVersion,
            #maxAttendees: maxAttendees,
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #supportsAttachments: supportsAttachments,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #patch,
              [request, calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #conferenceDataVersion: conferenceDataVersion,
                #maxAttendees: maxAttendees,
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #patch,
              [request, calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #conferenceDataVersion: conferenceDataVersion,
                #maxAttendees: maxAttendees,
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Event>);

  @override
  _i6.Future<_i4.Event> quickAdd(
    String? calendarId,
    String? text, {
    bool? sendNotifications,
    String? sendUpdates,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #quickAdd,
          [calendarId, text],
          {
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #quickAdd,
              [calendarId, text],
              {
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #quickAdd,
              [calendarId, text],
              {
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Event>);

  @override
  _i6.Future<_i4.Event> update(
    _i4.Event? request,
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? conferenceDataVersion,
    int? maxAttendees,
    bool? sendNotifications,
    String? sendUpdates,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request, calendarId, eventId],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #conferenceDataVersion: conferenceDataVersion,
            #maxAttendees: maxAttendees,
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #supportsAttachments: supportsAttachments,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #update,
              [request, calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #conferenceDataVersion: conferenceDataVersion,
                #maxAttendees: maxAttendees,
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Event>.value(
          _FakeEvent_11(
            this,
            Invocation.method(
              #update,
              [request, calendarId, eventId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #conferenceDataVersion: conferenceDataVersion,
                #maxAttendees: maxAttendees,
                #sendNotifications: sendNotifications,
                #sendUpdates: sendUpdates,
                #supportsAttachments: supportsAttachments,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Event>);

  @override
  _i6.Future<_i4.Channel> watch(
    _i4.Channel? request,
    String? calendarId, {
    bool? alwaysIncludeEmail,
    List<String>? eventTypes,
    String? iCalUID,
    int? maxAttendees,
    int? maxResults,
    String? orderBy,
    String? pageToken,
    List<String>? privateExtendedProperty,
    String? q,
    List<String>? sharedExtendedProperty,
    bool? showDeleted,
    bool? showHiddenInvitations,
    bool? singleEvents,
    String? syncToken,
    DateTime? timeMax,
    DateTime? timeMin,
    String? timeZone,
    DateTime? updatedMin,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watch,
          [request, calendarId],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #eventTypes: eventTypes,
            #iCalUID: iCalUID,
            #maxAttendees: maxAttendees,
            #maxResults: maxResults,
            #orderBy: orderBy,
            #pageToken: pageToken,
            #privateExtendedProperty: privateExtendedProperty,
            #q: q,
            #sharedExtendedProperty: sharedExtendedProperty,
            #showDeleted: showDeleted,
            #showHiddenInvitations: showHiddenInvitations,
            #singleEvents: singleEvents,
            #syncToken: syncToken,
            #timeMax: timeMax,
            #timeMin: timeMin,
            #timeZone: timeZone,
            #updatedMin: updatedMin,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Channel>.value(
          _FakeChannel_13(
            this,
            Invocation.method(
              #watch,
              [request, calendarId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #eventTypes: eventTypes,
                #iCalUID: iCalUID,
                #maxAttendees: maxAttendees,
                #maxResults: maxResults,
                #orderBy: orderBy,
                #pageToken: pageToken,
                #privateExtendedProperty: privateExtendedProperty,
                #q: q,
                #sharedExtendedProperty: sharedExtendedProperty,
                #showDeleted: showDeleted,
                #showHiddenInvitations: showHiddenInvitations,
                #singleEvents: singleEvents,
                #syncToken: syncToken,
                #timeMax: timeMax,
                #timeMin: timeMin,
                #timeZone: timeZone,
                #updatedMin: updatedMin,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Channel>.value(
          _FakeChannel_13(
            this,
            Invocation.method(
              #watch,
              [request, calendarId],
              {
                #alwaysIncludeEmail: alwaysIncludeEmail,
                #eventTypes: eventTypes,
                #iCalUID: iCalUID,
                #maxAttendees: maxAttendees,
                #maxResults: maxResults,
                #orderBy: orderBy,
                #pageToken: pageToken,
                #privateExtendedProperty: privateExtendedProperty,
                #q: q,
                #sharedExtendedProperty: sharedExtendedProperty,
                #showDeleted: showDeleted,
                #showHiddenInvitations: showHiddenInvitations,
                #singleEvents: singleEvents,
                #syncToken: syncToken,
                #timeMax: timeMax,
                #timeMin: timeMin,
                #timeZone: timeZone,
                #updatedMin: updatedMin,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Channel>);
}

/// A class which mocks [CalendarListResource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarListResource extends _i1.Mock
    implements _i4.CalendarListResource {
  @override
  _i6.Future<void> delete(String? calendarId, {String? $fields}) =>
      (super.noSuchMethod(
        Invocation.method(#delete, [calendarId], {#$fields: $fields}),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i4.CalendarListEntry> get(
    String? calendarId, {
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#get, [calendarId], {#$fields: $fields}),
        returnValue: _i6.Future<_i4.CalendarListEntry>.value(
          _FakeCalendarListEntry_14(
            this,
            Invocation.method(#get, [calendarId], {#$fields: $fields}),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.CalendarListEntry>.value(
          _FakeCalendarListEntry_14(
            this,
            Invocation.method(#get, [calendarId], {#$fields: $fields}),
          ),
        ),
      ) as _i6.Future<_i4.CalendarListEntry>);

  @override
  _i6.Future<_i4.CalendarListEntry> insert(
    _i4.CalendarListEntry? request, {
    bool? colorRgbFormat,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [request],
          {#colorRgbFormat: colorRgbFormat, #$fields: $fields},
        ),
        returnValue: _i6.Future<_i4.CalendarListEntry>.value(
          _FakeCalendarListEntry_14(
            this,
            Invocation.method(
              #insert,
              [request],
              {#colorRgbFormat: colorRgbFormat, #$fields: $fields},
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.CalendarListEntry>.value(
          _FakeCalendarListEntry_14(
            this,
            Invocation.method(
              #insert,
              [request],
              {#colorRgbFormat: colorRgbFormat, #$fields: $fields},
            ),
          ),
        ),
      ) as _i6.Future<_i4.CalendarListEntry>);

  @override
  _i6.Future<_i4.CalendarList> list({
    int? maxResults,
    String? minAccessRole,
    String? pageToken,
    bool? showDeleted,
    bool? showHidden,
    String? syncToken,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#list, [], {
          #maxResults: maxResults,
          #minAccessRole: minAccessRole,
          #pageToken: pageToken,
          #showDeleted: showDeleted,
          #showHidden: showHidden,
          #syncToken: syncToken,
          #$fields: $fields,
        }),
        returnValue: _i6.Future<_i4.CalendarList>.value(
          _FakeCalendarList_15(
            this,
            Invocation.method(#list, [], {
              #maxResults: maxResults,
              #minAccessRole: minAccessRole,
              #pageToken: pageToken,
              #showDeleted: showDeleted,
              #showHidden: showHidden,
              #syncToken: syncToken,
              #$fields: $fields,
            }),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.CalendarList>.value(
          _FakeCalendarList_15(
            this,
            Invocation.method(#list, [], {
              #maxResults: maxResults,
              #minAccessRole: minAccessRole,
              #pageToken: pageToken,
              #showDeleted: showDeleted,
              #showHidden: showHidden,
              #syncToken: syncToken,
              #$fields: $fields,
            }),
          ),
        ),
      ) as _i6.Future<_i4.CalendarList>);

  @override
  _i6.Future<_i4.CalendarListEntry> patch(
    _i4.CalendarListEntry? request,
    String? calendarId, {
    bool? colorRgbFormat,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [request, calendarId],
          {#colorRgbFormat: colorRgbFormat, #$fields: $fields},
        ),
        returnValue: _i6.Future<_i4.CalendarListEntry>.value(
          _FakeCalendarListEntry_14(
            this,
            Invocation.method(
              #patch,
              [request, calendarId],
              {#colorRgbFormat: colorRgbFormat, #$fields: $fields},
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.CalendarListEntry>.value(
          _FakeCalendarListEntry_14(
            this,
            Invocation.method(
              #patch,
              [request, calendarId],
              {#colorRgbFormat: colorRgbFormat, #$fields: $fields},
            ),
          ),
        ),
      ) as _i6.Future<_i4.CalendarListEntry>);

  @override
  _i6.Future<_i4.CalendarListEntry> update(
    _i4.CalendarListEntry? request,
    String? calendarId, {
    bool? colorRgbFormat,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request, calendarId],
          {#colorRgbFormat: colorRgbFormat, #$fields: $fields},
        ),
        returnValue: _i6.Future<_i4.CalendarListEntry>.value(
          _FakeCalendarListEntry_14(
            this,
            Invocation.method(
              #update,
              [request, calendarId],
              {#colorRgbFormat: colorRgbFormat, #$fields: $fields},
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.CalendarListEntry>.value(
          _FakeCalendarListEntry_14(
            this,
            Invocation.method(
              #update,
              [request, calendarId],
              {#colorRgbFormat: colorRgbFormat, #$fields: $fields},
            ),
          ),
        ),
      ) as _i6.Future<_i4.CalendarListEntry>);

  @override
  _i6.Future<_i4.Channel> watch(
    _i4.Channel? request, {
    int? maxResults,
    String? minAccessRole,
    String? pageToken,
    bool? showDeleted,
    bool? showHidden,
    String? syncToken,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watch,
          [request],
          {
            #maxResults: maxResults,
            #minAccessRole: minAccessRole,
            #pageToken: pageToken,
            #showDeleted: showDeleted,
            #showHidden: showHidden,
            #syncToken: syncToken,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i4.Channel>.value(
          _FakeChannel_13(
            this,
            Invocation.method(
              #watch,
              [request],
              {
                #maxResults: maxResults,
                #minAccessRole: minAccessRole,
                #pageToken: pageToken,
                #showDeleted: showDeleted,
                #showHidden: showHidden,
                #syncToken: syncToken,
                #$fields: $fields,
              },
            ),
          ),
        ),
        returnValueForMissingStub: _i6.Future<_i4.Channel>.value(
          _FakeChannel_13(
            this,
            Invocation.method(
              #watch,
              [request],
              {
                #maxResults: maxResults,
                #minAccessRole: minAccessRole,
                #pageToken: pageToken,
                #showDeleted: showDeleted,
                #showHidden: showHidden,
                #syncToken: syncToken,
                #$fields: $fields,
              },
            ),
          ),
        ),
      ) as _i6.Future<_i4.Channel>);
}
