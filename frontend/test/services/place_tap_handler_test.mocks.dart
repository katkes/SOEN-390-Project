// Mocks generated by Mockito 5.4.5 from annotations
// in soen_390/test/services/place_tap_handler_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter/src/widgets/navigator.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:soen_390/models/outdoor_poi.dart' as _i3;
import 'package:soen_390/services/google_maps_api_client.dart' as _i2;
import 'package:soen_390/services/poi_factory.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoogleMapsApiClient_0 extends _i1.SmartFake
    implements _i2.GoogleMapsApiClient {
  _FakeGoogleMapsApiClient_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakePointOfInterest_1 extends _i1.SmartFake
    implements _i3.PointOfInterest {
  _FakePointOfInterest_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [PointOfInterestFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockPointOfInterestFactory extends _i1.Mock
    implements _i4.PointOfInterestFactory {
  @override
  _i2.GoogleMapsApiClient get apiClient => (super.noSuchMethod(
        Invocation.getter(#apiClient),
        returnValue: _FakeGoogleMapsApiClient_0(
          this,
          Invocation.getter(#apiClient),
        ),
        returnValueForMissingStub: _FakeGoogleMapsApiClient_0(
          this,
          Invocation.getter(#apiClient),
        ),
      ) as _i2.GoogleMapsApiClient);

  @override
  _i5.Future<_i3.PointOfInterest> createPointOfInterest({
    required String? placeId,
    required String? imageUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#createPointOfInterest, [], {
          #placeId: placeId,
          #imageUrl: imageUrl,
        }),
        returnValue: _i5.Future<_i3.PointOfInterest>.value(
          _FakePointOfInterest_1(
            this,
            Invocation.method(#createPointOfInterest, [], {
              #placeId: placeId,
              #imageUrl: imageUrl,
            }),
          ),
        ),
        returnValueForMissingStub: _i5.Future<_i3.PointOfInterest>.value(
          _FakePointOfInterest_1(
            this,
            Invocation.method(#createPointOfInterest, [], {
              #placeId: placeId,
              #imageUrl: imageUrl,
            }),
          ),
        ),
      ) as _i5.Future<_i3.PointOfInterest>);
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i6.NavigatorObserver {
  @override
  void didPush(_i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(
        Invocation.method(#didPush, [route, previousRoute]),
        returnValueForMissingStub: null,
      );

  @override
  void didPop(_i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(
        Invocation.method(#didPop, [route, previousRoute]),
        returnValueForMissingStub: null,
      );

  @override
  void didRemove(
    _i6.Route<dynamic>? route,
    _i6.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(#didRemove, [route, previousRoute]),
        returnValueForMissingStub: null,
      );

  @override
  void didReplace({
    _i6.Route<dynamic>? newRoute,
    _i6.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(#didReplace, [], {
          #newRoute: newRoute,
          #oldRoute: oldRoute,
        }),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeTop(
    _i6.Route<dynamic>? topRoute,
    _i6.Route<dynamic>? previousTopRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(#didChangeTop, [topRoute, previousTopRoute]),
        returnValueForMissingStub: null,
      );

  @override
  void didStartUserGesture(
    _i6.Route<dynamic>? route,
    _i6.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(#didStartUserGesture, [route, previousRoute]),
        returnValueForMissingStub: null,
      );

  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(#didStopUserGesture, []),
        returnValueForMissingStub: null,
      );
}
