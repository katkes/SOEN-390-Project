// Mocks generated by Mockito 5.4.5 from annotations
// in soen_390/test/screens/Home/landing_page_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter/material.dart' as _i1;
import 'package:mockito/mockito.dart' as _i2;
import 'package:soen_390/screens/indoor/mappedin_map_controller.dart' as _i3;
import 'package:soen_390/utils/navigation_utils.dart' as _i6;
import 'package:soen_390/widgets/mappedin_webview.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [MappedinMapController].
///
/// See the documentation for Mockito's code generation for more information.
class MockMappedinMapController extends _i2.Mock
    implements _i3.MappedinMapController {
  MockMappedinMapController() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i1.GlobalKey<_i4.MappedinWebViewState> get webViewKey => (super.noSuchMethod(
        Invocation.getter(#webViewKey),
        returnValue: _FakeGlobalKey_0<_i4.MappedinWebViewState>(
          this,
          Invocation.getter(#webViewKey),
        ),
      ) as _i1.GlobalKey<_i4.MappedinWebViewState>);

  @override
  set webViewKey(_i1.GlobalKey<_i4.MappedinWebViewState>? _webViewKey) =>
      super.noSuchMethod(
        Invocation.setter(#webViewKey, _webViewKey),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<bool> selectBuildingByName(String? buildingName) =>
      (super.noSuchMethod(
        Invocation.method(#selectBuildingByName, [buildingName]),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> selectBuildingById(String? mapId) => (super.noSuchMethod(
        Invocation.method(#selectBuildingById, [mapId]),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  bool setMapId(String? mapId) => (super.noSuchMethod(
        Invocation.method(#setMapId, [mapId]),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<bool> navigateToRoom(String? roomNumber) => (super.noSuchMethod(
        Invocation.method(#navigateToRoom, [roomNumber]),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [NavigationUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationUtils extends _i2.Mock implements _i6.NavigationUtils {
  MockNavigationUtils() {
    _i2.throwOnMissingStub(this);
  }
}
