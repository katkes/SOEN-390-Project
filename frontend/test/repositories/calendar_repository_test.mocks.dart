// Mocks generated by Mockito 5.4.5 from annotations
// in soen_390/test/repositories/calendar_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:googleapis/calendar/v3.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:soen_390/services/cache_service.dart' as _i5;
import 'package:soen_390/services/calendar_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCalendarApi_0 extends _i1.SmartFake implements _i2.CalendarApi {
  _FakeCalendarApi_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CalendarService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarService extends _i1.Mock implements _i3.CalendarService {
  @override
  _i4.Future<List<_i2.Event>> fetchEvents([String? calendarId = 'primary']) =>
      (super.noSuchMethod(
            Invocation.method(#fetchEvents, [calendarId]),
            returnValue: _i4.Future<List<_i2.Event>>.value(<_i2.Event>[]),
            returnValueForMissingStub: _i4.Future<List<_i2.Event>>.value(
              <_i2.Event>[],
            ),
          )
          as _i4.Future<List<_i2.Event>>);

  @override
  _i4.Future<List<_i2.CalendarListEntry>> fetchCalendars() =>
      (super.noSuchMethod(
            Invocation.method(#fetchCalendars, []),
            returnValue: _i4.Future<List<_i2.CalendarListEntry>>.value(
              <_i2.CalendarListEntry>[],
            ),
            returnValueForMissingStub:
                _i4.Future<List<_i2.CalendarListEntry>>.value(
                  <_i2.CalendarListEntry>[],
                ),
          )
          as _i4.Future<List<_i2.CalendarListEntry>>);

  @override
  _i4.Future<_i2.Event?> createEvent(String? calendarId, _i2.Event? event) =>
      (super.noSuchMethod(
            Invocation.method(#createEvent, [calendarId, event]),
            returnValue: _i4.Future<_i2.Event?>.value(),
            returnValueForMissingStub: _i4.Future<_i2.Event?>.value(),
          )
          as _i4.Future<_i2.Event?>);

  @override
  _i4.Future<_i2.Event?> updateEvent(
    String? calendarId,
    String? eventId,
    _i2.Event? updatedEvent,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateEvent, [
              calendarId,
              eventId,
              updatedEvent,
            ]),
            returnValue: _i4.Future<_i2.Event?>.value(),
            returnValueForMissingStub: _i4.Future<_i2.Event?>.value(),
          )
          as _i4.Future<_i2.Event?>);

  @override
  _i4.Future<void> deleteEvent(String? calendarId, String? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteEvent, [calendarId, eventId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [CacheService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheService extends _i1.Mock implements _i5.CacheService {
  @override
  _i2.CalendarApi get calendarApi =>
      (super.noSuchMethod(
            Invocation.getter(#calendarApi),
            returnValue: _FakeCalendarApi_0(
              this,
              Invocation.getter(#calendarApi),
            ),
            returnValueForMissingStub: _FakeCalendarApi_0(
              this,
              Invocation.getter(#calendarApi),
            ),
          )
          as _i2.CalendarApi);

  @override
  _i4.Future<void> storeEvents(
    List<_i2.Event>? events, {
    required String? calendarId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #storeEvents,
              [events],
              {#calendarId: calendarId},
            ),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.Event>> getStoredEvents({required String? calendarId}) =>
      (super.noSuchMethod(
            Invocation.method(#getStoredEvents, [], {#calendarId: calendarId}),
            returnValue: _i4.Future<List<_i2.Event>>.value(<_i2.Event>[]),
            returnValueForMissingStub: _i4.Future<List<_i2.Event>>.value(
              <_i2.Event>[],
            ),
          )
          as _i4.Future<List<_i2.Event>>);

  @override
  _i4.Future<void> removeEventFromCache(
    String? eventId, {
    required String? calendarId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #removeEventFromCache,
              [eventId],
              {#calendarId: calendarId},
            ),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
