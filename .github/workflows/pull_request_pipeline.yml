name: SonarCloud Analysis & Flutter Build


on:
  workflow_run:
    workflows: ["Flutter Testing and Linting"]  # Match the name of flutter_push.yml
    types:
      - completed


permissions:
  actions: read
  contents: read


jobs:
  check-pr:
    name: Check if Workflow is Triggered by a Pull Request
    runs-on: [our-runner]
    steps:
      - name: Check if Branch is a PR
        run: |
          if [[ "${{ github.event.workflow_run.event }}" != "pull_request" ]]; then
            echo "Not triggered by a PR. Skipping."
            exit 1
          fi
    # This job will fail and stop execution if not a PR
  fetch-reports-gcs:
    name: Fetch Reports from Google Cloud Storage (GCS)
    runs-on: [our-runner]


    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCS_KEY }}


      - name: Manually Authenticate gcloud CLI
        run: |
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud auth list


      - name: Ensure Report Directories Exist
        run: mkdir -p frontend/reports


      - name: Fetch Frontend Reports from GCS
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||' | tr '/' '_')


          gsutil -q stat gs://soen_390_reports/$BRANCH_NAME/frontend/lcov.info && \
          gsutil cp gs://soen_390_reports/$BRANCH_NAME/frontend/lcov.info frontend/reports/lcov.info || \
          echo "Frontend coverage report not found."


          gsutil -q stat gs://soen_390_reports/$BRANCH_NAME/frontend/sonar-flutter-lint.json && \
          gsutil cp gs://soen_390_reports/$BRANCH_NAME/frontend/sonar-flutter-lint.json frontend/reports/sonar-flutter-lint.json || \
          echo "Frontend lint report not found."


  flutter_build:
    name: Build Flutter Project
    runs-on: [our-runner]


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          architecture: x64


      - name: Run Flutter Doctor
        working-directory: ./frontend
        run: flutter doctor


      - name: Install dependencies
        working-directory: ./frontend
        run: flutter pub get


      - name: Build Flutter APK
        working-directory: ./frontend
        run: flutter build apk --release


      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apk
          path: frontend/build/app/outputs/flutter-apk/app-release.apk


  sonarqube:
    name: SonarCloud Analysis
    runs-on: [our-runner]
    needs: [fetch-reports-gcs, flutter_build]
    if: success()


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Ensure Required Reports Exist (Prevent SonarCloud Failure)
        run: |
          mkdir -p frontend/reports


          if [ ! -f frontend/reports/lcov.info ]; then
            echo "Frontend coverage report missing, creating an empty one!"
            echo "TN:" > frontend/reports/lcov.info
          fi


          if [ ! -f frontend/reports/sonar-flutter-lint.json ]; then
            echo "Frontend lint report missing, creating an empty one!"
            echo '{"issues": []}' > frontend/reports/sonar-flutter-lint.json
          fi


      - name: List Reports Before Running SonarCloud
        run: |
          echo "Frontend Reports:"
          ls -lh frontend/reports || echo "No frontend reports found."


      - name: Run SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        with:
          args: >
            -Dsonar.projectKey=katkes_SOEN-390-Project
            -Dsonar.organization=katkes
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      - name: Upload Updated SonarCloud Reports to GCS
        if: always()
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||' | tr '/' '_')


          echo "Uploading updated reports to GCS..."


          gsutil cp frontend/reports/lcov.info gs://soen_390_reports/$BRANCH_NAME/frontend/lcov.info || \
          echo "No new frontend coverage report to upload."


          gsutil cp frontend/reports/sonar-flutter-lint.json gs://soen_390_reports/$BRANCH_NAME/frontend/sonar-flutter-lint.json || \
          echo "No new frontend lint report to upload."
