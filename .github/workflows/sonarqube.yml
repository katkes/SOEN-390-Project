name: SonarCloud Analysis 

on:
  push:
    branches:
      - main
      - release/**  # Run SonarCloud for main and release branches

  pull_request:
    branches:
      - main  # Run SonarCloud on PRs targeting main

  schedule:
   - cron: '0 2 */2 * *'  # Runs every other day at 2 AM UTC

permissions:
  actions: read  # ‚úÖ Allows reading workflow artifacts
  contents: read  # ‚úÖ Required for repository access

jobs:
  setup:
    name: Setup Job
    runs-on: ubuntu-latest
    steps:
      - name: Print Setup Message
        run: echo "Initializing SonarCloud Analysis Workflow"

  fetch-reports-gcs:
    name: Fetch Reports from Google Cloud Storage (GCS)
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCS_KEY }}

      - name: Install Google Cloud CLI
        run: |
            sudo apt-get update && sudo apt-get install -y google-cloud-cli
  
      - name: Ensure Report Directories Exist
        run: mkdir -p backend/reports frontend/reports

      - name: Fetch Backend Reports from GCS
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||' | tr '/' '_')
          gsutil cp gs://soen_390_reports/$BRANCH_NAME/backend/coverage.xml backend/reports/coverage.xml || echo "‚ö†Ô∏è Backend coverage report not found."
          gsutil cp gs://soen_390_reports/$BRANCH_NAME/backend/test-report.xml backend/reports/test-report.xml || echo "‚ö†Ô∏è Backend test report not found."

      - name: Fetch Frontend Reports from GCS
        run: |
          gsutil cp gs://soen_390_reports/$BRANCH_NAME/frontend/lcov.info frontend/reports/lcov.info || echo "‚ö†Ô∏è Frontend coverage report not found."
          gsutil cp gs://soen_390_reports/$BRANCH_NAME/frontend/sonar-flutter-lint.json frontend/reports/sonar-flutter-lint.json || echo "‚ö†Ô∏è Frontend lint report not found."

      - name: Fetch Python Lint Reports from GCS
        run: |
          gsutil cp gs://soen_390_reports/$BRANCH_NAME/backend/pylint-sonarqube.json backend/reports/pylint-sonarqube.json || echo "‚ö†Ô∏è Pylint report not found."

      - name: List Downloaded Reports
        run: |
          echo "üìÑ Checking downloaded reports..."
          ls -R backend/reports frontend/reports || echo "‚ö†Ô∏è No reports found."

  sonarqube:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: fetch-reports-gcs
    if: success()  # Run only if reports were successfully fetched

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full Git history for analysis

      - name: Ensure Required Reports Exist (Prevent SonarCloud Failure)
        run: |
          mkdir -p backend/reports frontend/reports

          if [ ! -f frontend/reports/lcov.info ]; then
            echo "‚ö†Ô∏è Coverage report missing, creating empty file!"
            echo "TN:" > frontend/reports/lcov.info
          fi
          
          if [ ! -f backend/reports/coverage.xml ]; then
            echo "‚ö†Ô∏è Backend coverage report missing, creating empty file!"
            touch backend/reports/coverage.xml
          fi

      - name: List Reports Before Running SonarCloud
        run: |
          echo "üîç Backend Reports:"
          ls -lh backend/reports || echo "‚ö†Ô∏è No backend reports found."
          echo "üîç Frontend Reports:"
          ls -lh frontend/reports || echo "‚ö†Ô∏è No frontend reports found."

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload Updated SonarCloud Reports to GCS
        if: always()  # Ensure upload happens even if SonarCloud fails
        run: |
            BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||' | tr '/' '_')
  
            # Upload Backend Reports
            gsutil cp backend/reports/coverage.xml gs://soen_390_reports/$BRANCH_NAME/backend/coverage.xml || echo "‚ö†Ô∏è No new backend coverage report to upload."
            gsutil cp backend/reports/test-report.xml gs://soen_390_reports/$BRANCH_NAME/backend/test-report.xml || echo "‚ö†Ô∏è No new backend test report to upload."
  
            # Upload Frontend Reports
            gsutil cp frontend/reports/lcov.info gs://soen_390_reports/$BRANCH_NAME/frontend/lcov.info || echo "‚ö†Ô∏è No new frontend coverage report to upload."
            gsutil cp frontend/reports/sonar-flutter-lint.json gs://soen_390_reports/$BRANCH_NAME/frontend/sonar-flutter-lint.json || echo "‚ö†Ô∏è No new frontend lint report to upload."
  
            # Upload Python Lint Report
            gsutil cp backend/reports/pylint-sonarqube.json gs://soen_390_reports/$BRANCH_NAME/backend/pylint-sonarqube.json || echo "‚ö†Ô∏è No new Pylint report to upload."
