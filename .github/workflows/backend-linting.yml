name: Python Linting & Formatting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure all dependencies are installed

      - name: Run Pylint (Generate JSON Report)
        working-directory: ./backend
        run: |
          mkdir -p reports
          pylint --output-format=json . > reports/pylint-report.json

      - name: Convert Pylint Report to SonarQube Format
        working-directory: ./backend
        run: |
          python scripts/convert_pylint_to_sonar.py reports/pylint-report.json reports/pylint-sonarqube.json

      - name: Upload Pylint Reports as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pylint-reports
          path: backend/reports/
          retention-days: 1

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCS_KEY }}
        # ✅ Manually Authenticate `gcloud` CLI (Fix for "No credentialed accounts" issue)
      - name: Manually Authenticate gcloud CLI
        run: |
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud auth list  # Debugging step to verify authentication
      # ✅ Ensure Folder Exists in GCS (Fixes permission issue)
      - name: Ensure Folder Exists in GCS
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||' | tr '/' '_')

          echo "Checking if folder exists in GCS..."
          if gsutil -q stat gs://soen_390_reports/$BRANCH_NAME/backend/.keep; then
            echo "✅ Folder already exists in GCS."
          else
            echo "❌ Folder does not exist. Creating placeholder..."
            echo "Placeholder file" > backend/reports/.keep
            gsutil cp backend/reports/.keep gs://soen_390_reports/$BRANCH_NAME/backend/.keep
          fi

      - name: Upload SonarQube Report to GCS
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||' | tr '/' '_')
          gsutil cp backend/reports/pylint-sonarqube.json gs://soen_390_reports/$BRANCH_NAME/backend/pylint-sonarqube.json || echo "⚠️ Pylint report upload failed."
