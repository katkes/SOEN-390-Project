name: Flutter Testing and Linting

on:
  push:
    paths:
      - frontend/**
      - .github/**

jobs:

  setup_gcs:
    name: Setup GCS Folder
    runs-on: [our-runner]
    
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCS_KEY }}

      - name: Ensure Folder Exists in GCS
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||' | tr '/' '_')
          echo "Checking if folder exists in GCS..."
          if gsutil -q stat gs://soen_390_reports/$BRANCH_NAME/frontend/.keep; then
            echo " Folder already exists in GCS."
          else
            echo " Folder does not exist. Creating placeholder..."
            echo "Placeholder file" > frontend/reports/.keep
            gsutil cp frontend/reports/.keep gs://soen_390_reports/$BRANCH_NAME/frontend/.keep
          fi

  linting:
    name: Lint & Format Check
    runs-on: [our-runner]
    needs: setup_gcs  # Ensure GCS setup is done before this job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          architecture: x64

      - name: Install Flutter dependencies
        working-directory: ./frontend
        run: flutter pub get

      - name: Run Flutter Doctor
        working-directory: ./frontend
        run: flutter doctor

      - name: Verify Flutter formatting
        working-directory: ./frontend
        run: dart format --output=none --set-exit-if-changed .

      - name: Run Flutter Analyze and Generate Report
        working-directory: ./frontend
        run: |
          mkdir -p reports
          flutter analyze --write=analysis_report.json
          mv analysis_report.json reports/analysis_report.json

      - name: Convert Flutter Analysis to SonarCloud Format
        working-directory: ./frontend
        run: |
          mkdir -p reports
          python3 - <<EOF
          import json, os

          input_file = "reports/analysis_report.json"
          output_file = "reports/sonar-flutter-lint.json"
          output_json = {"issues": []}

          if os.path.exists(input_file) and os.stat(input_file).st_size > 0:
              with open(input_file, "r") as f:
                  data = json.load(f)
              for issue in data.get("issues", []):
                  output_json["issues"].append({
                      "engineId": "flutter-analyze",
                      "ruleId": "dart-lint",
                      "severity": {"ERROR": "CRITICAL", "WARNING": "MAJOR", "INFO": "MINOR"}.get(issue["severity"].upper(), "MINOR"),
                      "type": "CODE_SMELL",
                      "primaryLocation": {
                          "message": issue["message"],
                          "filePath": f"frontend/{issue['location']['file']}",
                          "textRange": {"startLine": issue["location"]["startLine"], "endLine": issue["location"]["startLine"]}
                      }
                  })

          with open(output_file, "w") as f:
              json.dump(output_json, f, indent=2)
          print(f"Successfully converted {len(output_json['issues'])} lint issues to SonarCloud format.")
          EOF

      - name: Verify SonarCloud Lint Report Exists
        working-directory: ./frontend/reports
        run: |
          if [ ! -f sonar-flutter-lint.json ]; then
            echo '{"issues": []}' > sonar-flutter-lint.json
          fi

  testing:
    name: Run Flutter Tests
    runs-on: [our-runner]
    needs: setup_gcs  # Ensure GCS setup is done before this job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          architecture: x64

      - name: Install Flutter dependencies
        working-directory: ./frontend
        run: flutter pub get

      - name: Debug Coverage Directory
        working-directory: ./frontend
        run: |
          ls -R coverage || echo "Coverage directory not found"
          ls -R reports || echo "Reports directory not found"

      - name: Run Flutter tests with coverage
        working-directory: ./frontend
        run: |
          mkdir -p reports
          flutter test --coverage || echo "Tests failed, continuing..."
          if [ -f coverage/lcov.info ]; then
            mv coverage/lcov.info reports/lcov.info
          else
            echo "No coverage report generated."
          fi

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: frontend/reports/lcov.info
          if-no-files-found: ignore  # Prevents failure if file is missing

  upload_reports:
    name: Upload Reports to GCS
    runs-on: [our-runner]
    needs: [linting, testing]  # Run only after linting & testing finish

    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCS_KEY }}

      - name: Upload Reports to GCS
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||' | tr '/' '_')
          if [ -f frontend/reports/sonar-flutter-lint.json ]; then
            gsutil cp frontend/reports/sonar-flutter-lint.json gs://soen_390_reports/$BRANCH_NAME/frontend/sonar-flutter-lint.json
          else
            echo "SonarCloud lint report not found."
          fi

          if [ -f frontend/reports/lcov.info ]; then
            gsutil cp frontend/reports/lcov.info gs://soen_390_reports/$BRANCH_NAME/frontend/lcov.info
          else
            echo "Coverage report not found. Skipping upload."
          fi
